[metadata]
creation_date = "2023/09/21"
integration = ["endpoint"]
maturity = "production"
min_stack_comments = "New fields added: required_fields, related_integrations, setup"
min_stack_version = "8.3.0"
updated_date = "2024/03/03"
bypass_bbr_timing = true

[rule]
author = ["Elastic"]
description = """
Identifies the creation or modification of a medium size memory dump file which can indicate an attempt to access
credentials from a process memory.
"""
from = "now-9m"
index = ["logs-endpoint.events.file*"]
language = "eql"
license = "Elastic License v2"
name = "Potential Credential Access via Memory Dump File Creation"
risk_score = 21
rule_id = "e707a7be-cc52-41ac-8ab3-d34b38c20005"
severity = "low"
note = "This rule may have low to medium performance impact as it searches for file creation events in general while attempting to ignore specific system paths and known system processes."
tags = ["Domain: Endpoint", "OS: Windows", "Use Case: Threat Detection", "Tactic: Credential Access", "Data Source: Elastic Defend", "Rule Type: BBR"]
timestamp_override = "event.ingested"
building_block_type = "default"
type = "eql"

query = '''
file where host.os.type == "windows" and event.type == "creation" and

  /* MDMP header */
  startsWith(file.Ext.header_bytes, "4d444d50") and file.size >= 30000 and not
  (
    (
      /* Ignore known system processes */
      process.name : "System" or
      process.executable : (
        "?:\\Windows\\System32\\WerFault.exe",
        "?:\\Windows\\SysWOW64\\WerFault.exe",
        "?:\\Windows\\System32\\Wermgr.exe",
        "?:\\Windows\\SysWOW64\\Wermgr.exe",
        "?:\\Windows\\System32\\WerFaultSecure.exe",
        "?:\\Windows\\SysWOW64\\WerFaultSecure.exe",
        "?:\\Windows\\System32\\WUDFHost.exe",
        "C:\\Windows\\System32\\rdrleakdiag.exe",
        "?:\\Windows\\System32\\Taskmgr.exe",
        "?:\\Windows\\SysWOW64\\Taskmgr.exe"
      ) or

      /* Ignore specific system paths with executables */
      (
        file.extension == "exe" and
          (
            startsWith(process.executable, "?:\\Program Files\\") or
            startsWith(process.executable, "?:\\Program Files (x86)\\") or
            startsWith(process.executable, "?:\\Windows\\SystemApps\\")
          )
      ) or endsWith(process.executable, "\\AppData\\Roaming\\Zoom\\bin\\zCrashReport64.exe")
    ) and process.code_signature.trusted == true
    or
    (
      startsWith(file.path, "?:\\ProgramData\\Microsoft\\Windows\\WER\\") or
      startsWith(file.path, "?:\\ProgramData\\Microsoft\\WDF\\") or
      startsWith(file.path, "?:\\ProgramData\\Alteryx\\ErrorLogs\\") or
      startsWith(file.path, "?:\\ProgramData\\Goodix\\") or
      startsWith(file.path, "?:\\Windows\\system32\\config\\systemprofile\\AppData\\Local\\CrashDumps\\") or
      (
        startsWith(file.path, "?:\\Users\\") and stringContains(file.path, "\\AppData\\") and
        (
          stringContains(file.path, "\\Crashpad\\") or
          stringContains(file.path, "\\crashpaddb\\") or
          stringContains(file.path, "\\HungReports\\") or
          stringContains(file.path, "\\CrashDumps\\") or
          stringContains(file.path, "\\NativeCrashReporting\\")
        )
      ) or
      stringContains(file.path, "\\AppData\\Roaming\\Zoom\\logs\\zoomcrash")
    ) and (process.code_signature.trusted == true or process.executable == null)
  )
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1003"
name = "OS Credential Dumping"
reference = "https://attack.mitre.org/techniques/T1003/"
[[rule.threat.technique.subtechnique]]
id = "T1003.001"
name = "LSASS Memory"
reference = "https://attack.mitre.org/techniques/T1003/001/"



[rule.threat.tactic]
id = "TA0006"
name = "Credential Access"
reference = "https://attack.mitre.org/tactics/TA0006/"
