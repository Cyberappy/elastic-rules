[metadata]
creation_date = "2022/07/03"
integration = ["endpoint"]
maturity = "production"
min_stack_comments = "New fields added: required_fields, related_integrations, setup"
min_stack_version = "8.3.0"
updated_date = "2024/03/02"

[rule]
author = ["Elastic"]
description = """
Identifies the execution of a browser process to open an HTML file with high entropy and size. Adversaries may smuggle
data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files.
"""
from = "now-9m"
index = ["logs-endpoint.events.*"]
language = "eql"
license = "Elastic License v2"
name = "Suspicious HTML File Creation"
note = "This rule may have a low to medium performance impact due variety of file paths potentially matching each EQL sequence."
risk_score = 47
rule_id = "f0493cb4-9b15-43a9-9359-68c23a7f2cf3"
setup = """
If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,
events will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.
Hence for this rule to work effectively, users will need to add a custom ingest pipeline to populate
`event.ingested` to @timestamp.
For more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html
"""
severity = "medium"
tags = [
    "Domain: Endpoint",
    "OS: Windows",
    "Use Case: Threat Detection",
    "Tactic: Initial Access",
    "Data Source: Elastic Defend",
]
type = "eql"

query = '''
sequence by user.id with maxspan=2m

  /* Detects the creation or renaming of an HTML file in a user's Downloads, Outlook, or Temp directory */
 [file where host.os.type == "windows" and event.action : ("creation", "rename") and
  file.extension : ("htm", "html") and file.path like "?:\\Users*" and (
    stringContains(file.path, "\\Downloads\\") or
    stringContains(file.path, "\\Content.Outlook\\") or
    stringContains(file.path, "AppData\\Local\\Temp\\Temp") or
    stringContains(file.path, "AppData\\Local\\Temp\\7z") or
    stringContains(file.path, "AppData\\Local\\Temp\\Rar$")
    )
  and (file.Ext.entropy >= 5 and file.size >= 150000) or file.size >= 1000000]

  /* Detects the execution of a browser process to open an HTML file with high entropy and size */
 [process where host.os.type == "windows" and event.action == "start" and
  (
   (process.name in ("chrome.exe", "msedge.exe", "brave.exe", "whale.exe", "browser.exe", "dragon.exe", "vivaldi.exe", "opera.exe")
    and process.args == "--single-argument") or
   (process.name == "iexplore.exe" and process.args_count == 2) or
   (process.name in ("firefox.exe", "waterfox.exe") and process.args == "-url")
  )
  and file.path like "?:\\Users*" and (
    stringContains(file.path, "\\Downloads\\") or
    stringContains(file.path, "\\Content.Outlook\\") or
    stringContains(file.path, "AppData\\Local\\Temp\\Temp") or
    stringContains(file.path, "AppData\\Local\\Temp\\7z") or
    stringContains(file.path, "AppData\\Local\\Temp\\Rar$")
    )
  ]
'''


[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1566"
name = "Phishing"
reference = "https://attack.mitre.org/techniques/T1566/"
[[rule.threat.technique.subtechnique]]
id = "T1566.001"
name = "Spearphishing Attachment"
reference = "https://attack.mitre.org/techniques/T1566/001/"

[[rule.threat.technique.subtechnique]]
id = "T1566.002"
name = "Spearphishing Link"
reference = "https://attack.mitre.org/techniques/T1566/002/"



[rule.threat.tactic]
id = "TA0001"
name = "Initial Access"
reference = "https://attack.mitre.org/tactics/TA0001/"
[[rule.threat]]
framework = "MITRE ATT&CK"
[[rule.threat.technique]]
id = "T1027"
name = "Obfuscated Files or Information"
reference = "https://attack.mitre.org/techniques/T1027/"
[[rule.threat.technique.subtechnique]]
id = "T1027.006"
name = "HTML Smuggling"
reference = "https://attack.mitre.org/techniques/T1027/006/"



[rule.threat.tactic]
id = "TA0005"
name = "Defense Evasion"
reference = "https://attack.mitre.org/tactics/TA0005/"

